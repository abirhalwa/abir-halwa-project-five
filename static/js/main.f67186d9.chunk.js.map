{"version":3,"sources":["DataForm.js","Header.js","Footer.js","Information.js","App.js","serviceWorker.js","index.js"],"names":["DataForm","saveCard","event","preventDefault","file","Blob","state","name","email","mobile","phone","fax","toll","address","company","position","website","other","type","FileSaver","saveAs","handleInputChange","inputId","target","id","inputText","value","setState","extension","dialogOpen","data","this","props","dataArray","forEach","item","className","onSubmit","htmlFor","defaultValue","onChange","required","class","for","Component","Header","href","src","alt","aria-hidden","onClick","showInfo","Footer","Information","e","hideInfo","App","handleImageChange","fileType","files","indexOf","classifiedData","imgFile","imgSrc","URL","createObjectURL","revokeObjectURL","alert","analyzeData","companyFound","nameFound","positionFound","phoneFound","addressFound","regions","linesArray","region","lines","line","lineAsString","words","map","word","text","join","push","matchingArray","dataObj","numberIndex","numberText","namePattern","companyPattern","positionPattern","emailPattern","urlPattern","mobilePattern","phonePattern","numberPattern","extensionPattern","faxPattern","tollPattern","addressPattern1","addressPattern2","test","match","search","substr","length","handleSubmit","formData","FormData","append","options","_boundary","axios","then","response","catch","resetData","action","accept","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console","message"],"mappings":"kUAkKeA,E,YA9JX,aAAe,IAAD,8BACV,+CAoBJC,SAAW,SAACC,GACRA,EAAMC,iBAEN,IAAMC,EAAO,IAAIC,KACb,CAAC,gCAAD,OAEP,EAAKC,MAAMC,KAFJ,uCAGgB,EAAKD,MAAME,MAH3B,6CAKI,EAAKF,MAAMG,OALf,2BAMI,EAAKH,MAAMI,MANf,uBAOA,EAAKJ,MAAMK,IAPX,gDASC,EAAKL,MAAMM,KATZ,oDAWE,EAAKN,MAAMO,QAXb,yCAaA,EAAKP,MAAMQ,QAbX,4CAeE,EAAKR,MAAMS,SAfb,yCAiBA,EAAKT,MAAMU,QAjBX,qCAmBH,EAAKV,MAAMW,MAnBR,qDAsBI,CAAEC,KAAM,6BAChBC,IAAUC,OACNhB,EADJ,UAEO,EAAKE,MAAMC,KAFlB,SAGI,IAnDM,EAwDdc,kBAAoB,SAACnB,GACjB,IAAMoB,EAAUpB,EAAMqB,OAAOC,GACvBC,EAAYvB,EAAMqB,OAAOG,MAC/B,EAAKC,UAAS,WACV,OAAO,eAAGL,EAAUG,OA1DxB,EAAKnB,MAAQ,CACTQ,QAAS,GACTP,KAAM,GACNS,QAAS,GACTR,MAAO,GACPO,SAAU,GACVL,MAAO,GACPkB,UAAW,GACXnB,OAAQ,GACRE,IAAK,GACLC,KAAM,GACNC,QAAS,GACTI,MAAO,GACPY,YAAY,GAfN,E,iFAiEO,IAEbhB,EAASI,EAFG,OACVa,EAAOC,KAAKC,MAAMC,UAExBpB,EAAUI,EAAQ,GAClBa,EAAKI,SAAQ,SAACC,GACQ,YAAdA,EAAKjB,MACLL,EAAUA,EAAU,IAAMsB,EAAKT,MAC/BS,EAAKT,MAAQb,GAEM,UAAdsB,EAAKjB,OACVD,EAAQA,EAAQ,IAAMkB,EAAKT,MAC3BS,EAAKT,MAAQT,GAEjB,EAAKU,SAAL,eACKQ,EAAKjB,KAAOiB,EAAKT,a,+BAK1B,OACI,6BACA,0BAAMU,UAAU,WAAWC,SAAUN,KAAK9B,UACxB,kDACd,yBAAKmC,UAAU,YACX,2BAAOE,QAAQ,WAAf,gBACA,2BAAOpB,KAAK,OAAOM,GAAG,UAAUe,aAAcR,KAAKzB,MAAMQ,QAAS0B,SAAUT,KAAKV,qBAErF,yBAAKe,UAAU,YACX,2BAAOE,QAAQ,QAAf,QACA,2BAAOpB,KAAK,OAAOM,GAAG,OAAOe,aAAcR,KAAKzB,MAAMC,KAAMiC,SAAUT,KAAKV,kBAAmBoB,UAAQ,KAE1G,yBAAKL,UAAU,YACX,2BAAOE,QAAQ,YAAf,aACA,2BAAOpB,KAAK,OAAOM,GAAG,WAAWe,aAAcR,KAAKzB,MAAMS,SAAUyB,SAAUT,KAAKV,qBAEvF,yBAAKe,UAAU,YACX,2BAAOE,QAAQ,SAAf,cACA,2BAAOpB,KAAK,OAAOM,GAAG,QAAQe,aAAcR,KAAKzB,MAAMI,MAAO8B,SAAUT,KAAKV,qBAEjF,yBAAKe,UAAU,YACX,2BAAOE,QAAQ,aAAf,aACA,2BAAOpB,KAAK,OAAOM,GAAG,YAAYe,aAAcR,KAAKzB,MAAMsB,UAAWY,SAAUT,KAAKV,qBAEzF,yBAAKe,UAAU,YACX,2BAAOE,QAAQ,UAAf,UACA,2BAAOpB,KAAK,OAAOM,GAAG,SAASe,aAAcR,KAAKzB,MAAMG,OAAQ+B,SAAUT,KAAKV,qBAEnF,yBAAKe,UAAU,YACX,2BAAOE,QAAQ,OAAf,OACA,2BAAOpB,KAAK,OAAOM,GAAG,MAAMe,aAAcR,KAAKzB,MAAMK,IAAK6B,SAAUT,KAAKV,qBAE7E,yBAAKe,UAAU,YACX,2BAAOE,QAAQ,QAAf,QACA,2BAAOpB,KAAK,OAAOM,GAAG,OAAOe,aAAcR,KAAKzB,MAAMM,KAAM4B,SAAUT,KAAKV,qBAE/E,yBAAKe,UAAU,YACX,2BAAOE,QAAQ,WAAf,WACA,2BAAOpB,KAAK,OAAOM,GAAG,UAAUe,aAAcR,KAAKzB,MAAMU,QAASwB,SAAUT,KAAKV,qBAErF,yBAAKe,UAAU,YACX,2BAAOE,QAAQ,SAAf,SACA,2BAAOpB,KAAK,QAAQM,GAAG,QAAQe,aAAcR,KAAKzB,MAAME,MAAOgC,SAAUT,KAAKV,qBAElF,yBAAKe,UAAU,eACX,2BAAOE,QAAQ,WAAf,WACA,8BAAUpB,KAAK,OAAOM,GAAG,UAAUe,aAAcR,KAAKzB,MAAMO,QAAS2B,SAAUT,KAAKV,qBAExF,yBAAKe,UAAU,eACX,2BAAOE,QAAQ,SAAf,iBACA,8BAAUpB,KAAK,OAAOM,GAAG,QAAQe,aAAcR,KAAKzB,MAAMW,MAAOuB,SAAUT,KAAKV,qBAEpF,4BAAQH,KAAK,UAAb,2BAEDa,KAAKzB,MAAMuB,WACV,yBAAKa,MAAM,UACC,8BACI,yCACA,2BAAOxB,KAAK,QAAQM,GAAG,OAAOjB,KAAK,SAASmB,MAAM,SAClD,2BAAOiB,IAAI,QAAX,QACA,2BAAOzB,KAAK,QAAQM,GAAG,SAASjB,KAAK,SAASmB,MAAM,WACpD,2BAAOiB,IAAI,UAAX,UACA,2BAAOzB,KAAK,QAAQM,GAAG,QAAQjB,KAAK,SAASmB,MAAM,UACnD,2BAAOiB,IAAI,SAAX,SACA,4BAAQzB,KAAK,UAAb,UACD,4CAGb,U,GA1JK0B,aCYRC,MAZf,SAAgBb,GACZ,OACI,4BAAQI,UAAU,WACd,uBAAGU,KAAK,cACJ,yBAAKC,IAAI,oBAAoBC,IAAI,kBAErC,uBAAGC,cAAY,OAAOb,UAAU,qBAAsBc,QAAS,kBAAMlB,EAAMmB,aACvE,0BAAMf,UAAU,UAAhB,qCCADgB,MAPf,WACI,OACI,4BAAQhB,UAAU,WACd,wCAAa,0BAAMa,cAAY,QAAlB,QAAb,uBCYGI,MAff,SAAsBrB,GACf,OACI,6BAASI,UAAU,eACf,kDACA,4BACI,+IACA,gGACA,iHACA,8EACA,uFAEJ,6BAAK,4BAAQZ,GAAG,QAAQ0B,QAAW,SAAAI,GAAC,OAAItB,EAAMuB,SAASD,KAAlD,YC8PLE,E,YApQb,aAAe,IAAD,8BACZ,+CAWFC,kBAAoB,SAACvD,GACnB,IACMwD,EAAWxD,EAAMqB,OAAOoC,MAAM,GAAGzC,KADjB,CAAC,aAAc,YAAa,YAAa,aAE7C0C,QAAQF,IAAa,GACrC,EAAK/B,SAAS,CACZkC,eAAgB,GAChBC,QAAS5D,EAAMqB,OAAOoC,MAAM,GAC5BI,OAAQC,IAAIC,gBAAgB/D,EAAMqB,OAAOoC,MAAM,MAEjDK,IAAIE,gBAAgBhE,EAAMqB,OAAOoC,MAAM,KAGvCQ,MAAM,qDAxBI,EA6BdC,YAAc,WACZ,IAcIC,EAAcC,EAAWC,EAAeC,EAAYC,EAdpDC,EAAU,EAAKpE,MAAMwB,KACnB6C,EAAa,GACnBD,EAAQxC,SAAQ,SAAC0C,GACfA,EAAOC,MAAM3C,SAAQ,SAAC4C,GACpB,IAGMC,EAHcD,EAAKE,MAAMC,KAAI,SAACC,GAClC,OAAOA,EAAKC,QAEmBC,KAAK,KACtCT,EAAWU,KAAKN,SAOpBV,EAAeC,EAAYC,EAAgBE,GAAe,EAC1D,IAaIa,EACAC,EACAC,EAAaC,EAfXC,EAAc,gDACdC,EAAiB,+BACjBC,EAAkB,kCAClBC,EAAe,yCACfC,EAAa,gbACbC,EAAgB,4JAChBC,EAAe,mKACfC,EAAgB,iBAChBC,EAAmB,kDACnBC,EAAa,gIACbC,EAAc,mKACdC,EAAkB,2DAClBC,EAAkB,2EAIlBzC,EAAiBc,EAAWM,KAAI,SAACH,GA4FrC,OA3FAS,EAAU,GACVD,EAAgB,IACZK,EAAeY,KAAKzB,IAAUT,GAAiBI,GAM1CiB,EAAYa,KAAKzB,IAAUR,GAAcG,EAMzCmB,EAAgBW,KAAKzB,IAASR,IAAcC,IAAkBE,GACrEa,EAAgBR,EAAK0B,MAAMZ,GAC3BL,EAAQrE,KAAO,WACfqE,EAAQ7D,MAAQ4D,EAAc,GAC9Bf,GAAgB,GAETsB,EAAaU,KAAKzB,IACzBQ,EAAgBR,EAAK0B,MAAMX,GAC3BN,EAAQrE,KAAO,QACfqE,EAAQ7D,MAAQ4D,EAAc,IAEvBQ,EAAWS,KAAKzB,IACvBQ,EAAgBR,EAAK0B,MAAMV,GAC3BP,EAAQrE,KAAO,UACfqE,EAAQ7D,MAAQ4D,EAAc,IAEvBU,EAAaO,KAAKzB,KAAUN,GACnCc,EAAgBR,EAAK0B,MAAMR,GAC3BR,EAAcF,EAAc,GAAGmB,OAAOR,GACtCR,EAAaH,EAAc,GAAGoB,OAAOlB,EAAaF,EAAc,GAAGqB,QACnEpB,EAAQrE,KAAO,QACfsD,GAAa,EACT0B,EAAiBK,KAAKzB,IACxBS,EAAQ7D,MAAQ,GAChB6D,EAAQ7D,MAAM2D,KAAKI,GACnBH,EAAgBR,EAAK0B,MAAMN,GAC3BV,EAAcF,EAAc,GAAGmB,OAAOR,GACtCR,EAAaH,EAAc,GAAGoB,OAAOlB,EAAaF,EAAc,GAAGqB,QACnEpB,EAAQ7D,MAAM2D,KAAKI,IAGnBF,EAAQ7D,MAAQ+D,GAGXM,EAAcQ,KAAKzB,IAC1BQ,EAAgBR,EAAK0B,MAAMT,GAC3BP,EAAcF,EAAc,GAAGmB,OAAOR,GACtCR,EAAaH,EAAc,GAAGoB,OAAOlB,EAAaF,EAAc,GAAGqB,QACnEpB,EAAQrE,KAAO,SACfqE,EAAQ7D,MAAQ+D,GAETU,EAAWI,KAAKzB,IACvBQ,EAAgBR,EAAK0B,MAAML,GAC3BX,EAAcF,EAAc,GAAGmB,OAAOR,GACtCR,EAAaH,EAAc,GAAGoB,OAAOlB,EAAaF,EAAc,GAAGqB,QACnEpB,EAAQrE,KAAO,MACfqE,EAAQ7D,MAAQ+D,GAETW,EAAYG,KAAKzB,IACxBQ,EAAgBR,EAAK0B,MAAMJ,GAC3BZ,EAAcF,EAAc,GAAGmB,OAAOR,GACtCR,EAAaH,EAAc,GAAGoB,OAAOlB,EAAaF,EAAc,GAAGqB,QACnEpB,EAAQrE,KAAO,MACfqE,EAAQ7D,MAAQ+D,GAERhB,EAaDA,IACPa,EAAcD,KAAKP,GACnBS,EAAQrE,KAAO,UACfqE,EAAQ7D,MAAQoD,IAfZuB,EAAgBE,KAAKzB,GACvBQ,EAAgBR,EAAK0B,MAAMH,GAEpBC,EAAgBC,KAAKzB,KAC5BQ,EAAgBR,EAAK0B,MAAMF,IAEA,IAAzBhB,EAAcqB,SAChBlC,GAAe,EACfc,EAAQrE,KAAO,UACfqE,EAAQ7D,MAAQ4D,EAAc,MAtEhCA,EAAgBR,EAAK0B,MAAMd,GAC3BH,EAAQrE,KAAO,OACfqE,EAAQ7D,MAAQ4D,EAAc,GAC9BhB,GAAY,IATZgB,EAAgBR,EAAK0B,MAAMb,GAC3BJ,EAAQrE,KAAO,UACfqE,EAAQ7D,MAAQ4D,EAAc,GAC9BjB,GAAe,GAiFY,IAAzBiB,EAAcqB,SAChBpB,EAAQrE,KAAO,QACfqE,EAAQ7D,MAAQoD,GAEXS,KAET,EAAK5D,SAAS,CACZkC,eAAgBA,KA7JN,EAkKd+C,aAAe,SAAC1G,GACdA,EAAMC,iBACN,IAEI0G,EAAW,IAAIC,SACnBD,EAASE,OAAO,OAAQ,EAAKzG,MAAMwD,SACnC,IAAIkD,EAAU,CACZ,OAAU,OACV,IANU,iEAOV,QAAW,CACT,4BAPiB,mCAQjB,eAAe,iCAAf,OAAiDH,EAASI,YAE5DnF,KAAM+E,GAERK,IAAMF,GAASG,MAAK,SAACC,GACnB,EAAKzF,SAAS,CACZG,KAAMsF,EAAStF,KAAK4C,UAEtB,EAAKN,iBACJiD,OAAM,WACPlD,MAAM,wEAvLI,EA4LdmD,UAAY,SAACpH,GACXA,EAAMC,iBACN,EAAKwB,UAAS,WACZ,MAAO,CACLG,KAAM,GACNgC,QAAS,KACTC,OAAQ,KACRF,eAAgB,GAChBV,UAAU,OApMF,EA0MdA,SAAW,WACT,EAAKxB,SAAS,CACZwB,UAAU,KA5MA,EAiNdI,SAAW,SAACD,GACVA,EAAEnD,iBACF,EAAKwB,SAAS,CACZwB,UAAU,KAlNZ,EAAK7C,MAAQ,CACXwB,KAAM,GACNgC,QAAS,KACTC,OAAQ,KACRF,eAAgB,GAChBV,UAAU,GAPA,E,sEA0NZ,OACE,6BACE,kBAAC,EAAD,CAAQA,SAAUpB,KAAKoB,WACvB,0BAAMf,UAAU,WAGZL,KAAKzB,MAAM6C,SAAW,kBAAC,EAAD,CAAaI,SAAUxB,KAAKwB,WAChD,iCACE,2EAGA,0BAAMnB,UAAU,gBAAgBmF,OAAO,GAAGlF,SAAUN,KAAK6E,cACvD,gEAEwB,OAAtB7E,KAAKzB,MAAMyD,OACT,yBAAK3B,UAAU,kBACb,2BAAOE,QAAQ,iBAAiBF,UAAU,kBAA1C,wBACA,2BAAOlB,KAAK,OAAOM,GAAG,iBAAiBgB,SAAUT,KAAK0B,kBAAmBhB,UAAQ,EAAC+E,OAAO,YACzF,uBAAGpF,UAAU,0BAA0Ba,cAAY,QAAO,0BAAMb,UAAU,UAAhB,kCAG5D,6BACE,yBAAMW,IAAKhB,KAAKzB,MAAMyD,OAAQf,IAAI,kBACI,IAArCjB,KAAKzB,MAAMuD,eAAe8C,OACzB,4BAAQzF,KAAK,UAAb,UAAyC,KAE3C,4BAAQgC,QAASnB,KAAKuF,WAAtB,yBAIPvF,KAAKzB,MAAMuD,eAAe8C,OAAS,EAClC,kBAAC,EAAD,CAAU1E,UAAWF,KAAKzB,MAAMuD,iBAChC,OAIV,kBAAC,EAAD,W,GA/PUjB,aCME6E,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASpB,MACvB,2DCZNqB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBhB,MAAK,SAAAiB,GACJA,EAAaC,gBAEdhB,OAAM,SAAAiB,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.f67186d9.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport FileSaver from \"file-saver\";\r\nclass DataForm extends Component {\r\n    // this component is used to show the analyzed data in a form\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            company: '',\r\n            name: '',\r\n            website: '',\r\n            email: '',\r\n            position: '',\r\n            phone: '',\r\n            extension: '',\r\n            mobile: '',\r\n            fax: '',\r\n            toll: '',\r\n            address: '',\r\n            other: '',\r\n            dialogOpen: false,\r\n        };\r\n    }\r\n\r\n    // this function is used to save the information from the form to a V Card file\r\n    \r\n    saveCard = (event) => {\r\n        event.preventDefault();\r\n\r\n        const file = new Blob(\r\n            [`BEGIN:VCARD\r\nVERSION:3.0\r\nFN:${this.state.name}\r\nitem1.EMAIL;TYPE=INTERNET:${this.state.email}\r\nitem1.X-ABLabel:\r\nTEL;TYPE=CELL:${this.state.mobile}\r\nTEL;TYPE=WORK:${this.state.phone}\r\nitem2.TEL:${this.state.fax}\r\nitem2.X-ABLabel:workFax\r\nitem3.TEL:${ this.state.toll }\r\nitem3.X-ABLabel:Toll Free\r\nitem4.ADR:;;${this.state.address}\r\nitem4.X-ABLabel:\r\nitem5.ORG:${this.state.company};\r\nitem5.X-ABLabel:\r\nitem6.TITLE:${this.state.position}\r\nitem6.X-ABLabel:\r\nitem7.URL:${this.state.website}\r\nitem7.X-ABLabel:\r\nNOTE: ${ this.state.other }\r\nCATEGORIES:myContacts\r\nEND:VCARD\r\n            `], { type: \"text/vcard;charset=utf-8\" });\r\n        FileSaver.saveAs(\r\n            file,\r\n            `${this.state.name}.vcf`,\r\n            true\r\n        );\r\n    }\r\n\r\n    // this event handler to handle any text input/textarea change \r\n    handleInputChange = (event) => {\r\n        const inputId = event.target.id;\r\n        const inputText = event.target.value;\r\n        this.setState(() => {\r\n            return { [inputId]: inputText };\r\n        });\r\n    }\r\n\r\n    //load all the information from the props sent by the parent to the state\r\n    componentDidMount() {\r\n        const data = this.props.dataArray;\r\n        let address, other;\r\n        address = other = '';\r\n        data.forEach((item) => {\r\n            if (item.type === 'address') {\r\n                address = address + ' ' + item.value;\r\n                item.value = address;\r\n            }\r\n            else if (item.type === 'other') {\r\n                other = other + ' ' + item.value;\r\n                item.value = other;\r\n            }\r\n            this.setState({\r\n                [item.type]: item.value\r\n            });\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n            <form className=\"dataForm\" onSubmit={this.saveCard}>\r\n                              <h2>Business Card Data</h2>\r\n                <div className=\"inputDiv\">\r\n                    <label htmlFor=\"company\">Company Name</label>\r\n                    <input type=\"text\" id=\"company\" defaultValue={this.state.company} onChange={this.handleInputChange} />\r\n                </div>\r\n                <div className=\"inputDiv\">\r\n                    <label htmlFor=\"name\">Name</label>\r\n                    <input type=\"text\" id=\"name\" defaultValue={this.state.name} onChange={this.handleInputChange} required />\r\n                </div>\r\n                <div className=\"inputDiv\">\r\n                    <label htmlFor=\"position\">Job Title</label>\r\n                    <input type=\"text\" id=\"position\" defaultValue={this.state.position} onChange={this.handleInputChange} />\r\n                </div>\r\n                <div className=\"inputDiv\">\r\n                    <label htmlFor=\"phone\">Work Phone</label>\r\n                    <input type=\"text\" id=\"phone\" defaultValue={this.state.phone} onChange={this.handleInputChange} />\r\n                </div>\r\n                <div className=\"inputDiv\">\r\n                    <label htmlFor=\"extension\">Extension</label>\r\n                    <input type=\"text\" id=\"extension\" defaultValue={this.state.extension} onChange={this.handleInputChange} />\r\n                </div>\r\n                <div className=\"inputDiv\">\r\n                    <label htmlFor=\"mobile\">Mobile</label>\r\n                    <input type=\"text\" id=\"mobile\" defaultValue={this.state.mobile} onChange={this.handleInputChange} />\r\n                </div>\r\n                <div className=\"inputDiv\">\r\n                    <label htmlFor=\"fax\">Fax</label>\r\n                    <input type=\"text\" id=\"fax\" defaultValue={this.state.fax} onChange={this.handleInputChange} />\r\n                </div>\r\n                <div className=\"inputDiv\">\r\n                    <label htmlFor=\"toll\">Toll</label>\r\n                    <input type=\"text\" id=\"toll\" defaultValue={this.state.toll} onChange={this.handleInputChange} />\r\n                </div>\r\n                <div className=\"inputDiv\">\r\n                    <label htmlFor=\"website\">Website</label>\r\n                    <input type=\"text\" id=\"website\" defaultValue={this.state.website} onChange={this.handleInputChange} />\r\n                </div>\r\n                <div className=\"inputDiv\">\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <input type=\"email\" id=\"email\" defaultValue={this.state.email} onChange={this.handleInputChange} />\r\n                </div>\r\n                <div className=\"textareaDiv\">\r\n                    <label htmlFor=\"address\">Address</label>\r\n                    <textarea type=\"text\" id=\"address\" defaultValue={this.state.address} onChange={this.handleInputChange} />\r\n                </div>\r\n                <div className=\"textareaDiv\">\r\n                    <label htmlFor=\"other\">Other Details</label>\r\n                    <textarea type=\"text\" id=\"other\" defaultValue={this.state.other} onChange={this.handleInputChange} />\r\n                </div>\r\n                <button type=\"submit\">Save as a conatct card</button>\r\n            </form >\r\n              {this.state.dialogOpen?\r\n                <div class=\"dialog\">\r\n                            <form>\r\n                                <h1>Export as</h1>\r\n                                <input type=\"radio\" id=\"male\" name=\"gender\" value=\"male\"></input>\r\n                                <label for=\"male\">Male</label>\r\n                                <input type=\"radio\" id=\"female\" name=\"gender\" value=\"female\"></input>\r\n                                <label for=\"female\">Female</label>\r\n                                <input type=\"radio\" id=\"other\" name=\"gender\" value=\"other\"></input>\r\n                                <label for=\"other\">Other</label>\r\n                                <button type=\"submit\">Export</button>\r\n                               <button >Cancel</button>\r\n                            </form>\r\n                </div>\r\n                : null}\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\nexport default DataForm;","import React from 'react';\r\n// this function component is used to load the header in the page\r\nfunction Header(props){\r\n    return (\r\n        <header className=\"wrapper\">\r\n            <a href='index.html'>\r\n                <img src=\"./assets/logo.png\" alt=\"scan it logo\"/>\r\n            </a>\r\n            <i aria-hidden=\"true\" className=\"fas fa-info-circle\"  onClick={() => props.showInfo()}>\r\n                <span className=\"srOnly\">click to show help information</span>\r\n            </i>\r\n        </header>\r\n    );\r\n}\r\nexport default Header;","import React from 'react';\r\n// this function component is used to load the footer in the page\r\nfunction Footer() {\r\n    return (\r\n        <footer className=\"wrapper\">\r\n            <p>Copyright <span aria-hidden=\"true\">©</span> 2020 scanit.com </p>\r\n        </footer>\r\n    );\r\n}\r\nexport default Footer;","import React from 'react';\r\n// this function is used to load help informtion in the page\r\nfunction Information (props) {\r\n       return (\r\n           <section className=\"information\">\r\n               <h1>How to Use Scan It</h1>\r\n               <ol>\r\n                   <li>You need first to upload an image of a business card from one of the follwoing formt 'png', 'jpeg' 'bmp', 'gif'</li>\r\n                   <li>Then, you have to clcik on submit to start the analyzing process</li>\r\n                   <li>After that, you will be able to see the image information classified into fields.</li>\r\n                   <li>You can change the information if you wish to </li>\r\n                   <li>you can save the contact information as a Contct Card </li>\r\n               </ol>\r\n               <div><button id=\"close\" onClick = {e => props.hideInfo(e)}>close</button></div>\r\n           </section>\r\n       );\r\n}\r\nexport default Information;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport DataForm from './DataForm.js';\nimport Header from './Header.js';\nimport Footer from './Footer.js';\nimport Information from './Information.js';\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      data: [], // save the returened data from the pi\n      imgFile: null, //save the actual img file\n      imgSrc: null, // save the img src\n      classifiedData: [], // save the classified data\n      showInfo: false, //to show or to hide the help information section\n    };\n  }\n\n  // event handler to image change\n  handleImageChange = (event) => {\n    const allowedFormat = ['image/jpeg', 'image/png', 'image/gif', 'image/bmp'];\n    const fileType = event.target.files[0].type;\n    if (allowedFormat.indexOf(fileType) >= 0) {\n      this.setState({\n        classifiedData: [],\n        imgFile: event.target.files[0],\n        imgSrc: URL.createObjectURL(event.target.files[0]),\n      });\n      URL.revokeObjectURL(event.target.files[0]); //to avoid memory issues\n    }\n    else {\n      alert('Wrong file format!! Please choose an image file!');\n    }\n  }\n\n  // a function to analyze the data on the image\n  analyzeData = () => {\n    let regions = this.state.data;\n    const linesArray = [];\n    regions.forEach((region) => { // map over the regions\n      region.lines.forEach((line) => { //map over the lines \n        const currentLine = line.words.map((word) => { //map over the words\n          return word.text;\n        });\n        const lineAsString = currentLine.join(' ');\n        linesArray.push(lineAsString); //create a new array to push all the lines to it\n      });\n    });\n\n    // analyzing process using RegEx\n    // IMPORTANT NOTE: the application sometimes confuses between Company name and person name because they bothe have the same format\n    let companyFound, nameFound, positionFound, phoneFound, addressFound;\n    companyFound = nameFound = positionFound = addressFound = false;\n    const namePattern = /^[a-z|.|-]{2,}\\s+[a-z|.|-]+(\\s[a-z|.|-|,]+)?/i; //built by me\n    const companyPattern = /^[a-z|.|-]+(\\s[a-z|.|-]+)*$/i;//built by me\n    const positionPattern = /^([a-z]+\\s*[.|-|\\\\|/|&]*\\s*)*$/i;//built by me\n    const emailPattern = /[a-z0-9._-]+@[a-z0-9.-]+\\.[a-z]{2,4}$/i; //created by me\n    const urlPattern = /^(?:(?:https?|ftp):\\/\\/)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})))(?::\\d{2,5})?(?:\\/\\S*)?$/i; //copied from the internet\n    const mobilePattern = /^((mobile|mob|cell|hand|c|m|d|direct)\\b[.|:|,]?\\s*)?(\\(?[+]?[0-9]{1,4}\\)?\\s*-?)?(\\(?[0-9]{1,2}\\)?\\s*)?([\\\\|/|(|.|-]?\\s*[0-9]{3,}\\s*[\\\\|/|)|.|-]?\\s*){2,}/i;//built by me\n    const phonePattern = /^((phone|tel|telephone|work|t|w|p|ph|office)\\b[.|:|,]?\\s*)?(\\(?[+]?[0-9]{1,4}\\)?\\s*-?)?(\\(?[0-9]{1,2}\\)?\\s*)?([\\\\|/|(|.|-]?\\s*[0-9]{3,}\\s*[\\\\|/|)|.|-]?\\s*){2,}/i;//built by me\n    const numberPattern = /(\\(|\\+|[0-9])+/;//built by me\n    const extensionPattern = /(x|ext|extension|e)+\\s*[.|:|-]?\\s*[0-9]{1,4}?$/i;//built by me\n    const faxPattern = /^((fax|f)\\b[.|:|,]?\\s*)?(\\(?[+]?[0-9]{1,4}\\)?\\s*-?)?(\\(?[0-9]{1,2}\\)?\\s*)?([\\\\|/|(|.|-]?\\s*[0-9]{3,}\\s*[\\\\|/|)|.|-]?\\s*){2,}/i;//built by me\n    const tollPattern = /^((toll|toll-free|toll free|toll|toli, free)\\b[.|:|,]?\\s*)?(\\(?[+]?[0-9]{1,4}\\)?\\s*-?)?(\\(?[0-9]{1,2}\\)?\\s*)?([\\\\|/|(|.|-]?\\s*[0-9]{3,}\\s*[\\\\|/|)|.|-]?\\s*){2,}/i;//built by me\n    const addressPattern1 = /\\d+\\s+[A-z]+[.]?[-|,]?\\s*([A-z]*[0-9]*[.]?[-|,|#]?\\s*)*/i;//built by me\n    const addressPattern2 = /(po box|p.o.box|po. box|po.box)+\\s+\\d+\\s*([A-z]*[0-9]*[.]?[-|,|#]?\\s*)*/i;//\n    let matchingArray;\n    let dataObj;\n    let numberIndex, numberText;\n    const classifiedData = linesArray.map((line) => {\n      dataObj = {};\n      matchingArray = [];\n      if (companyPattern.test(line) && !companyFound && !addressFound) { //fetching company info\n        matchingArray = line.match(companyPattern);\n        dataObj.type = 'company';\n        dataObj.value = matchingArray[0];\n        companyFound = true;\n      }\n      else if (namePattern.test(line) && !nameFound && !addressFound) {//fetching person name\n        matchingArray = line.match(namePattern);\n        dataObj.type = 'name';\n        dataObj.value = matchingArray[0];\n        nameFound = true;\n      }\n      else if (positionPattern.test(line) && nameFound && !positionFound && !addressFound) { //fetcging job title\n        matchingArray = line.match(positionPattern);\n        dataObj.type = 'position';\n        dataObj.value = matchingArray[0];\n        positionFound = true;\n      }\n      else if (emailPattern.test(line)) { //fetching the email\n        matchingArray = line.match(emailPattern);\n        dataObj.type = 'email';\n        dataObj.value = matchingArray[0];\n      }\n      else if (urlPattern.test(line)) { //fetching the url\n        matchingArray = line.match(urlPattern);\n        dataObj.type = 'website';\n        dataObj.value = matchingArray[0];\n      }\n      else if (phonePattern.test(line) && !phoneFound) { //fetching the phone number\n        matchingArray = line.match(phonePattern);\n        numberIndex = matchingArray[0].search(numberPattern);\n        numberText = matchingArray[0].substr(numberIndex, matchingArray[0].length);\n        dataObj.type = 'phone';\n        phoneFound = true;\n        if (extensionPattern.test(line)) { //fetching the extension\n          dataObj.value = [];\n          dataObj.value.push(numberText);\n          matchingArray = line.match(extensionPattern);\n          numberIndex = matchingArray[0].search(numberPattern);\n          numberText = matchingArray[0].substr(numberIndex, matchingArray[0].length);\n          dataObj.value.push(numberText);\n        }\n        else {\n          dataObj.value = numberText;\n        }\n      }\n      else if (mobilePattern.test(line)) { //fetching the mobile number\n        matchingArray = line.match(mobilePattern);\n        numberIndex = matchingArray[0].search(numberPattern);\n        numberText = matchingArray[0].substr(numberIndex, matchingArray[0].length);\n        dataObj.type = 'mobile';\n        dataObj.value = numberText;\n      }\n      else if (faxPattern.test(line)) { //fetching the fax number\n        matchingArray = line.match(faxPattern);\n        numberIndex = matchingArray[0].search(numberPattern);\n        numberText = matchingArray[0].substr(numberIndex, matchingArray[0].length);\n        dataObj.type = 'fax';\n        dataObj.value = numberText;\n      }\n      else if (tollPattern.test(line)) { //fetching the toll free number\n        matchingArray = line.match(tollPattern);\n        numberIndex = matchingArray[0].search(numberPattern);\n        numberText = matchingArray[0].substr(numberIndex, matchingArray[0].length);\n        dataObj.type = 'fax';\n        dataObj.value = numberText;\n      }\n      else if (!addressFound) { //fetching the address\n        if (addressPattern1.test(line)) {\n          matchingArray = line.match(addressPattern1);\n        }\n        else if (addressPattern2.test(line)) {\n          matchingArray = line.match(addressPattern2);\n        }\n        if (matchingArray.length !== 0) {\n          addressFound = true;\n          dataObj.type = 'address';\n          dataObj.value = matchingArray[0];\n        }\n      }\n      else if (addressFound) {\n        matchingArray.push(line); //adding to the address\n        dataObj.type = 'address';\n        dataObj.value = line;\n      }\n      if (matchingArray.length === 0) {\n        dataObj.type = 'other';\n        dataObj.value = line;\n      }\n      return dataObj;\n    });\n    this.setState({ //update the state\n      classifiedData: classifiedData,\n    });\n  }\n\n  //an event handler fires when the form is submitted \n  handleSubmit = (event) => {\n    event.preventDefault();\n    const url = 'https://abirvision.cognitiveservices.azure.com/vision/v3.0/ocr';\n    let subscriptionKey ='fb000dd4edb34ee69cb43359984ee319';\n    var formData = new FormData();\n    formData.append('file', this.state.imgFile);\n    var options = {\n      'method': 'POST',\n      'url': url,\n      'headers': {\n        'Ocp-Apim-Subscription-Key': subscriptionKey,\n        'content-type': `multipart/form-data; boundary=${formData._boundary}`,\n      },\n      data: formData,\n    };\n    axios(options).then((response) => { // using axios to call the api\n      this.setState({\n        data: response.data.regions,\n      });\n      this.analyzeData();\n    }).catch(() => {\n      alert(`Your order can't be processeded right now please try again later`);\n    });\n  };\n\n  // a function used to reset all the state variables\n  resetData = (event) => {\n    event.preventDefault();\n    this.setState(() => {\n      return {\n        data: [],\n        imgFile: null,\n        imgSrc: null,\n        classifiedData: [],\n        showInfo: false,\n      }\n    });\n  }\n\n  // function to show the help information \n  showInfo = () => {\n    this.setState({\n      showInfo: true,\n    });\n  }\n\n  // a function to hide the help informtion\n  hideInfo = (e) => {\n    e.preventDefault();\n    this.setState({\n      showInfo: false,\n    });\n  }\n\n  // render method\n  render() {\n    return (\n      <div>\n        <Header showInfo={this.showInfo} />\n        <main className=\"wrapper\">\n         \n          {\n            this.state.showInfo ? <Information hideInfo={this.hideInfo} /> :\n              <section >\n                <h1>\n                  Turn your business cards into Contact Cards\n          </h1>\n                <form className=\"imgUploadForm\" action=\"\" onSubmit={this.handleSubmit}>\n                  <h2>Select a business card to upload</h2>\n                  {\n                    this.state.imgSrc === null ?\n                      <div className=\"fileUploadtDiv\">\n                        <label htmlFor=\"imageFileInput\" className=\"visuallyHidden\">Upload business card</label>\n                        <input type=\"file\" id=\"imageFileInput\" onChange={this.handleImageChange} required accept=\"image/*\" />\n                        <i className=\"fas fa-cloud-upload-alt\" aria-hidden=\"true\"><span className=\"srOnly\">browse to to select an image</span></i>\n                      </div>\n                      :\n                      <div>\n                        < img src={this.state.imgSrc} alt=\"business card\" />\n                        {this.state.classifiedData.length === 0 ?\n                          <button type=\"submit\" >submit</button> : null\n                        }\n                        <button onClick={this.resetData}>Select another card</button>\n                      </div>\n                  }\n                </form>\n                {this.state.classifiedData.length > 0 ?\n                  <DataForm dataArray={this.state.classifiedData} /> :\n                  null}\n              </section>\n          }\n        </main>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}